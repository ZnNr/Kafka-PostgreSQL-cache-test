name: CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  ci:
    name: Run CI Checks
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: my_user
          POSTGRES_PASSWORD: my_password
          POSTGRES_DB: orders_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
        ports:
          - 2181:2181
        options: >-
          --health-cmd "echo stat | nc localhost 2181 | grep Mode"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        ports:
          - 9092:9092
        options: >-
          --health-cmd "kafka-topics --bootstrap-server localhost:9092 --list"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y netcat-openbsd

      - name: Install Go tools
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          go install github.com/stretchr/testify/assert@latest
          go install github.com/stretchr/testify/mock@latest

      - name: Check Go version
        run: go version

      - name: Download Go modules
        run: go mod download

      - name: Wait for services
        run: |
          echo "Waiting for PostgreSQL..."
          until nc -z localhost 5432; do
            sleep 1
          done
          
          echo "Waiting for Redis..."
          until nc -z localhost 6379; do
            sleep 1
          done
          
          echo "Waiting for Zookeeper..."
          until nc -z localhost 2181; do
            sleep 1
          done
          
          echo "Waiting for Kafka..."
          until nc -z localhost 9092; do
            sleep 1
          done
          sleep 10

      - name: Format check
        run: |
          if ! gofmt -l . | grep -q "."; then
            echo "✅ All files are formatted"
          else
            echo "❌ Some files need formatting"
            gofmt -d .
            exit 1
          fi

      - name: Vet check
        run: go vet ./...

      - name: Run unit tests
        run: go test -v ./... -run 'TestProcessOrder' -count=1

      - name: Create Kafka topics
        run: |
          docker exec $(docker ps -q -f "ancestor=confluentinc/cp-kafka:latest") \
            kafka-topics --create --topic orders.dlq --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 || true

      - name: Run integration test
        run: go test -v ./... -run 'TestInvalidOrderGoesToDLQ' -count=1

      - name: Check vulnerabilities
        run: govulncheck ./...