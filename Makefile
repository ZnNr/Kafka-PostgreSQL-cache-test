# Makefile —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
.PHONY: fmt vet lint test coverage cover-html cover-func clean help all run-service run-producer build-service build-producer up down up-logs redis-cli psql logs status install-lint

# –í–∫–ª—é—á–∞–µ–º CGO –¥–ª—è race detection
export CGO_ENABLED=1

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ golangci-lint
install-lint:
	@go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
	@echo "‚úÖ golangci-lint —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
fmt:
	@gofmt -s -l -w .
	@echo "‚úì –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –Ω–∞ –æ—à–∏–±–∫–∏
vet:
	@go mod tidy 2>/dev/null || true
	@go vet ./...
	@echo "‚úì go vet –ø—Ä–æ—à—ë–ª"

# –õ–∏–Ω—Ç–∏–Ω–≥ –∫–æ–¥–∞
lint:
	@golangci-lint run ./... --config .golangci.yml 2>/dev/null || \
	golangci-lint run ./cmd/... ./internal/... ./config/... 2>/dev/null || \
	echo "–õ–∏–Ω—Ç–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω"
	@echo "‚úì –õ–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–æ—à—ë–ª"

# –ë—ã—Å—Ç—Ä—ã–π –ª–∏–Ω—Ç–∏–Ω–≥
lint-fast:
	@golangci-lint run --fast ./... 2>/dev/null || echo "‚ö†Ô∏è  –ë—ã—Å—Ç—Ä—ã–π –ª–∏–Ω—Ç–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
	@echo "–ë—ã—Å—Ç—Ä—ã–π –ª–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–æ—à—ë–ª"

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
test:
	@go mod tidy 2>/dev/null || true
	@CGO_ENABLED=1 go test ./... -v
	@echo "‚úì –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏"

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å race detection (–µ—Å–ª–∏ CGO –¥–æ—Å—Ç—É–ø–µ–Ω)
test-race:
	@go mod tidy 2>/dev/null || true
	@(CGO_ENABLED=1 go test -race ./... -v 2>/dev/null && echo "‚úì –¢–µ—Å—Ç—ã —Å race detection –ø—Ä–æ—à–ª–∏") || \
	(go test ./... -v && echo "‚úì –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ (race detection –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
coverage:
	@go mod tidy 2>/dev/null || true
	@go test -coverprofile=coverage.out ./...
	@go tool cover -func=coverage.out
	@echo "üìä –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ. –§–∞–π–ª: coverage.out"
	@echo "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'make cover-html' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

# –ü–æ–∫—Ä—ã—Ç–∏–µ –≤ HTML
cover-html: coverage
	@go tool cover -html=coverage.out
	@echo "üåê –û—Ç–∫—Ä—ã–≤–∞—é –æ—Ç—á—ë—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ..."

# –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á—ë—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
cover-func: coverage
	@go tool cover -func=coverage.out

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@rm -f coverage.out 2>/dev/null || true
	@rm -f *.log 2>/dev/null || true
	@rm -f bin/service 2>/dev/null || true
	@rm -f bin/producer 2>/dev/null || true
	@find . -name "*\.test" -delete 2>/dev/null || true
	@echo "üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
run-service:
	@go mod tidy 2>/dev/null || true
	go run cmd/service/main.go

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥—é—Å–µ—Ä–∞
run-producer:
	@go mod tidy 2>/dev/null || true
	go run cmd/producer/producer.go

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å–º–æ—Ç–æ—Ä—â–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
run-dlq:
	@go mod tidy 2>/dev/null || true
	go run cmd/dlq_reader/dlq_watcher.go

# –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
build-service:
	@go mod tidy 2>/dev/null || true
	go build -o bin/service cmd/service/main.go

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–¥—é—Å–µ—Ä–∞
build-producer:
	@go mod tidy 2>/dev/null || true
	go build -o bin/producer cmd/producer/main.go

# –°–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
build-all: build-service build-producer
	@echo "–í—Å–µ –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–±—Ä–∞–Ω—ã"

# –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
all: fmt vet lint test-race

# –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö
run-all: run-service run-producer run-dlq

# –ü–æ–º–æ—â—å
help:
	@echo " –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  make fmt          ‚Äî —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
	@echo "  make vet          ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—à–∏–±–∫–∏"
	@echo "  make lint         ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä"
	@echo "  make lint-fast    ‚Äî –±—ã—Å—Ç—Ä—ã–π –ª–∏–Ω—Ç–∏–Ω–≥"
	@echo "  make test         ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  make test-race    ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å race detection"
	@echo "  make coverage     ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo "  make cover-html   ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á—ë—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
	@echo "  make cover-func   ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
	@echo "  make all          ‚Äî –≤—Å—ë –ø–æ–¥—Ä—è–¥ (fmt, vet, lint, test-race)"
	@echo ""
	@echo "  –°–±–æ—Ä–∫–∞:"
	@echo "  make build-service  ‚Äî —Å–æ–±—Ä–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å"
	@echo "  make build-producer ‚Äî —Å–æ–±—Ä–∞—Ç—å –ø—Ä–æ–¥—é—Å–µ—Ä–∞"
	@echo "  make build-all      ‚Äî —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –±–∏–Ω–∞—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo ""
	@echo " Docker Compose:"
	@echo "  make up           ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make down         ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  make up-logs      ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Å –ª–æ–≥–∞–º–∏"
	@echo "  make redis-cli    ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis CLI"
	@echo "  make psql         ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL"
	@echo "  make logs         ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
	@echo "  make status       ‚Äî —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo ""
	@echo " –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
	@echo "  make run-service  ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å"
	@echo "  make run-producer ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥—é—Å–µ—Ä–∞"
	@echo ""
	@echo " –û—á–∏—Å—Ç–∫–∞ –∏ —É—Ç–∏–ª–∏—Ç—ã:"
	@echo "  make clean        ‚Äî —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo "  make install-lint ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å golangci-lint"
	@echo ""
	@echo "  make help         ‚Äî —ç—Ç–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞"